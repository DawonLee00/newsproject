{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vkdld\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\opensource2\\\\newsproject\\\\src\\\\components\\\\ui\\\\ChartView.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useEffect, useState, useRef } from \"react\";\nimport { Chart, LineController, CategoryScale, LinearScale, PointElement, LineElement } from \"chart.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WeatherChart = props => {\n  _s();\n  const chartRef = useRef(null);\n  let chartInstance = null;\n  useEffect(() => {\n    const ctx = chartRef.current.getContext(\"2d\");\n    const createChart = () => {\n      Chart.register(LineController, CategoryScale, LinearScale, PointElement, LineElement);\n      chartInstance = new Chart(ctx, {\n        type: \"line\",\n        data: {\n          labels: [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\"],\n          datasets: [{\n            label: \"Data 1\",\n            data: [\"-10\", \"-9\", \"-5\", \"-4\", \"-1\", \"0\"],\n            borderColor: \"rgba(109, 35, 249, 1)\",\n            backgroundColor: \"rgba(109, 35, 249, 0.2)\",\n            pointRadius: 5,\n            // 포인트 크기\n            pointBackgroundColor: \"rgba(109, 35, 249, 1)\",\n            // 포인트 배경색\n            pointBorderColor: \"rgba(255, 255, 255, 1)\",\n            // 포인트 테두리 색\n            pointHoverRadius: 7,\n            // 호버 시 포인트 크기\n            pointHoverBackgroundColor: \"rgba(109, 35, 249, 1)\",\n            // 호버 시 포인트 배경색\n            pointHoverBorderColor: \"rgba(255, 255, 255, 1)\",\n            // 호버 시 포인트 테두리 색\n            fill: false // 라인 그래프에서 영역 채우기 비활성화\n          }]\n        },\n\n        options: {\n          scales: {\n            x: {\n              display: true\n            },\n            y: {\n              beginAtZero: true,\n              max: 10 // 최대값 설정\n            }\n          }\n        }\n      });\n    };\n\n    const destroyChart = () => {\n      if (chartInstance) {\n        chartInstance.destroy();\n        chartInstance = null;\n      }\n    };\n    const initializeChart = () => {\n      destroyChart(); // 이전 차트 파괴\n      createChart(); // 새로운 차트 생성\n    };\n\n    // 컴포넌트가 처음 렌더링될 때 차트 초기화\n    initializeChart();\n\n    // 컴포넌트가 unmount될 때 차트 파괴\n    return () => {\n      destroyChart();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: chartRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 12\n  }, this);\n};\n_s(WeatherChart, \"X+1SfQQ6xefXNU27aQW843M7cTw=\");\n_c = WeatherChart;\nexport default WeatherChart;\nvar _c;\n$RefreshReg$(_c, \"WeatherChart\");","map":{"version":3,"names":["React","useEffect","useState","useRef","Chart","LineController","CategoryScale","LinearScale","PointElement","LineElement","jsxDEV","_jsxDEV","WeatherChart","props","_s","chartRef","chartInstance","ctx","current","getContext","createChart","register","type","data","labels","datasets","label","borderColor","backgroundColor","pointRadius","pointBackgroundColor","pointBorderColor","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","fill","options","scales","x","display","y","beginAtZero","max","destroyChart","destroy","initializeChart","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/vkdld/OneDrive/바탕 화면/opensource2/newsproject/src/components/ui/ChartView.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { useEffect, useState, useRef } from \"react\"\r\nimport {\r\n    Chart,\r\n    LineController,\r\n    CategoryScale,\r\n    LinearScale,\r\n    PointElement,\r\n    LineElement,\r\n} from \"chart.js\";\r\n  \r\nconst WeatherChart = (props) => {\r\n    const chartRef = useRef(null);\r\n    let chartInstance = null;\r\n  \r\n    useEffect(() => {\r\n      const ctx = chartRef.current.getContext(\"2d\");\r\n  \r\n      const createChart = () => {\r\n        Chart.register(\r\n          LineController,\r\n          CategoryScale,\r\n          LinearScale,\r\n          PointElement,\r\n          LineElement\r\n        );\r\n        chartInstance = new Chart(ctx, {\r\n          type: \"line\",\r\n          data: {\r\n            labels: [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\"],\r\n            datasets: [\r\n              {\r\n                label: \"Data 1\",\r\n                data: [\"-10\", \"-9\", \"-5\", \"-4\", \"-1\", \"0\"],\r\n                borderColor: \"rgba(109, 35, 249, 1)\",\r\n                backgroundColor: \"rgba(109, 35, 249, 0.2)\",\r\n                pointRadius: 5, // 포인트 크기\r\n                pointBackgroundColor: \"rgba(109, 35, 249, 1)\", // 포인트 배경색\r\n                pointBorderColor: \"rgba(255, 255, 255, 1)\", // 포인트 테두리 색\r\n                pointHoverRadius: 7, // 호버 시 포인트 크기\r\n                pointHoverBackgroundColor: \"rgba(109, 35, 249, 1)\", // 호버 시 포인트 배경색\r\n                pointHoverBorderColor: \"rgba(255, 255, 255, 1)\", // 호버 시 포인트 테두리 색\r\n                fill: false, // 라인 그래프에서 영역 채우기 비활성화\r\n              },\r\n            ],\r\n          },\r\n          options: {\r\n            scales: {\r\n              x: {\r\n                display: true,\r\n              },\r\n              y: {\r\n                beginAtZero: true,\r\n                max: 10, // 최대값 설정\r\n              },\r\n            },\r\n          },\r\n        });\r\n      };\r\n  \r\n      const destroyChart = () => {\r\n        if (chartInstance) {\r\n          chartInstance.destroy();\r\n          chartInstance = null;\r\n        }\r\n      };\r\n  \r\n      const initializeChart = () => {\r\n        destroyChart(); // 이전 차트 파괴\r\n        createChart(); // 새로운 차트 생성\r\n      };\r\n  \r\n      // 컴포넌트가 처음 렌더링될 때 차트 초기화\r\n      initializeChart();\r\n  \r\n      // 컴포넌트가 unmount될 때 차트 파괴\r\n      return () => {\r\n        destroyChart();\r\n      };\r\n    }, []);\r\n  \r\n    return <canvas ref={chartRef} />;\r\n}\r\n\r\nexport default WeatherChart;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AACnD,SACIC,KAAK,EACLC,cAAc,EACdC,aAAa,EACbC,WAAW,EACXC,YAAY,EACZC,WAAW,QACR,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElB,MAAMC,YAAY,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC5B,MAAMC,QAAQ,GAAGZ,MAAM,CAAC,IAAI,CAAC;EAC7B,IAAIa,aAAa,GAAG,IAAI;EAExBf,SAAS,CAAC,MAAM;IACd,MAAMgB,GAAG,GAAGF,QAAQ,CAACG,OAAO,CAACC,UAAU,CAAC,IAAI,CAAC;IAE7C,MAAMC,WAAW,GAAGA,CAAA,KAAM;MACxBhB,KAAK,CAACiB,QAAQ,CACZhB,cAAc,EACdC,aAAa,EACbC,WAAW,EACXC,YAAY,EACZC,WACF,CAAC;MACDO,aAAa,GAAG,IAAIZ,KAAK,CAACa,GAAG,EAAE;QAC7BK,IAAI,EAAE,MAAM;QACZC,IAAI,EAAE;UACJC,MAAM,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;UACtCC,QAAQ,EAAE,CACR;YACEC,KAAK,EAAE,QAAQ;YACfH,IAAI,EAAE,CAAC,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,CAAC;YAC1CI,WAAW,EAAE,uBAAuB;YACpCC,eAAe,EAAE,yBAAyB;YAC1CC,WAAW,EAAE,CAAC;YAAE;YAChBC,oBAAoB,EAAE,uBAAuB;YAAE;YAC/CC,gBAAgB,EAAE,wBAAwB;YAAE;YAC5CC,gBAAgB,EAAE,CAAC;YAAE;YACrBC,yBAAyB,EAAE,uBAAuB;YAAE;YACpDC,qBAAqB,EAAE,wBAAwB;YAAE;YACjDC,IAAI,EAAE,KAAK,CAAE;UACf,CAAC;QAEL,CAAC;;QACDC,OAAO,EAAE;UACPC,MAAM,EAAE;YACNC,CAAC,EAAE;cACDC,OAAO,EAAE;YACX,CAAC;YACDC,CAAC,EAAE;cACDC,WAAW,EAAE,IAAI;cACjBC,GAAG,EAAE,EAAE,CAAE;YACX;UACF;QACF;MACF,CAAC,CAAC;IACJ,CAAC;;IAED,MAAMC,YAAY,GAAGA,CAAA,KAAM;MACzB,IAAI3B,aAAa,EAAE;QACjBA,aAAa,CAAC4B,OAAO,CAAC,CAAC;QACvB5B,aAAa,GAAG,IAAI;MACtB;IACF,CAAC;IAED,MAAM6B,eAAe,GAAGA,CAAA,KAAM;MAC5BF,YAAY,CAAC,CAAC,CAAC,CAAC;MAChBvB,WAAW,CAAC,CAAC,CAAC,CAAC;IACjB,CAAC;;IAED;IACAyB,eAAe,CAAC,CAAC;;IAEjB;IACA,OAAO,MAAM;MACXF,YAAY,CAAC,CAAC;IAChB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBAAOhC,OAAA;IAAQmC,GAAG,EAAE/B;EAAS;IAAAgC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACpC,CAAC;AAAApC,EAAA,CAvEKF,YAAY;AAAAuC,EAAA,GAAZvC,YAAY;AAyElB,eAAeA,YAAY;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}