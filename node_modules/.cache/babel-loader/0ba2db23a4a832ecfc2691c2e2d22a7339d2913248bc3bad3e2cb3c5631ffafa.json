{"ast":null,"code":"// Generated by CoffeeScript 1.12.7\n(function () {\n  var NodeType,\n    WriterState,\n    XMLCData,\n    XMLComment,\n    XMLDTDAttList,\n    XMLDTDElement,\n    XMLDTDEntity,\n    XMLDTDNotation,\n    XMLDeclaration,\n    XMLDocType,\n    XMLDummy,\n    XMLElement,\n    XMLProcessingInstruction,\n    XMLRaw,\n    XMLText,\n    XMLWriterBase,\n    assign,\n    hasProp = {}.hasOwnProperty;\n  assign = require('./Utility').assign;\n  NodeType = require('./NodeType');\n  XMLDeclaration = require('./XMLDeclaration');\n  XMLDocType = require('./XMLDocType');\n  XMLCData = require('./XMLCData');\n  XMLComment = require('./XMLComment');\n  XMLElement = require('./XMLElement');\n  XMLRaw = require('./XMLRaw');\n  XMLText = require('./XMLText');\n  XMLProcessingInstruction = require('./XMLProcessingInstruction');\n  XMLDummy = require('./XMLDummy');\n  XMLDTDAttList = require('./XMLDTDAttList');\n  XMLDTDElement = require('./XMLDTDElement');\n  XMLDTDEntity = require('./XMLDTDEntity');\n  XMLDTDNotation = require('./XMLDTDNotation');\n  WriterState = require('./WriterState');\n  module.exports = XMLWriterBase = function () {\n    function XMLWriterBase(options) {\n      var key, ref, value;\n      options || (options = {});\n      this.options = options;\n      ref = options.writer || {};\n      for (key in ref) {\n        if (!hasProp.call(ref, key)) continue;\n        value = ref[key];\n        this[\"_\" + key] = this[key];\n        this[key] = value;\n      }\n    }\n    XMLWriterBase.prototype.filterOptions = function (options) {\n      var filteredOptions, ref, ref1, ref2, ref3, ref4, ref5, ref6;\n      options || (options = {});\n      options = assign({}, this.options, options);\n      filteredOptions = {\n        writer: this\n      };\n      filteredOptions.pretty = options.pretty || false;\n      filteredOptions.allowEmpty = options.allowEmpty || false;\n      filteredOptions.indent = (ref = options.indent) != null ? ref : '  ';\n      filteredOptions.newline = (ref1 = options.newline) != null ? ref1 : '\\n';\n      filteredOptions.offset = (ref2 = options.offset) != null ? ref2 : 0;\n      filteredOptions.dontPrettyTextNodes = (ref3 = (ref4 = options.dontPrettyTextNodes) != null ? ref4 : options.dontprettytextnodes) != null ? ref3 : 0;\n      filteredOptions.spaceBeforeSlash = (ref5 = (ref6 = options.spaceBeforeSlash) != null ? ref6 : options.spacebeforeslash) != null ? ref5 : '';\n      if (filteredOptions.spaceBeforeSlash === true) {\n        filteredOptions.spaceBeforeSlash = ' ';\n      }\n      filteredOptions.suppressPrettyCount = 0;\n      filteredOptions.user = {};\n      filteredOptions.state = WriterState.None;\n      return filteredOptions;\n    };\n    XMLWriterBase.prototype.indent = function (node, options, level) {\n      var indentLevel;\n      if (!options.pretty || options.suppressPrettyCount) {\n        return '';\n      } else if (options.pretty) {\n        indentLevel = (level || 0) + options.offset + 1;\n        if (indentLevel > 0) {\n          return new Array(indentLevel).join(options.indent);\n        }\n      }\n      return '';\n    };\n    XMLWriterBase.prototype.endline = function (node, options, level) {\n      if (!options.pretty || options.suppressPrettyCount) {\n        return '';\n      } else {\n        return options.newline;\n      }\n    };\n    XMLWriterBase.prototype.attribute = function (att, options, level) {\n      var r;\n      this.openAttribute(att, options, level);\n      r = ' ' + att.name + '=\"' + att.value + '\"';\n      this.closeAttribute(att, options, level);\n      return r;\n    };\n    XMLWriterBase.prototype.cdata = function (node, options, level) {\n      var r;\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r = this.indent(node, options, level) + '<![CDATA[';\n      options.state = WriterState.InsideTag;\n      r += node.value;\n      options.state = WriterState.CloseTag;\n      r += ']]>' + this.endline(node, options, level);\n      options.state = WriterState.None;\n      this.closeNode(node, options, level);\n      return r;\n    };\n    XMLWriterBase.prototype.comment = function (node, options, level) {\n      var r;\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r = this.indent(node, options, level) + '<!-- ';\n      options.state = WriterState.InsideTag;\n      r += node.value;\n      options.state = WriterState.CloseTag;\n      r += ' -->' + this.endline(node, options, level);\n      options.state = WriterState.None;\n      this.closeNode(node, options, level);\n      return r;\n    };\n    XMLWriterBase.prototype.declaration = function (node, options, level) {\n      var r;\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r = this.indent(node, options, level) + '<?xml';\n      options.state = WriterState.InsideTag;\n      r += ' version=\"' + node.version + '\"';\n      if (node.encoding != null) {\n        r += ' encoding=\"' + node.encoding + '\"';\n      }\n      if (node.standalone != null) {\n        r += ' standalone=\"' + node.standalone + '\"';\n      }\n      options.state = WriterState.CloseTag;\n      r += options.spaceBeforeSlash + '?>';\n      r += this.endline(node, options, level);\n      options.state = WriterState.None;\n      this.closeNode(node, options, level);\n      return r;\n    };\n    XMLWriterBase.prototype.docType = function (node, options, level) {\n      var child, i, len, r, ref;\n      level || (level = 0);\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r = this.indent(node, options, level);\n      r += '<!DOCTYPE ' + node.root().name;\n      if (node.pubID && node.sysID) {\n        r += ' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"';\n      } else if (node.sysID) {\n        r += ' SYSTEM \"' + node.sysID + '\"';\n      }\n      if (node.children.length > 0) {\n        r += ' [';\n        r += this.endline(node, options, level);\n        options.state = WriterState.InsideTag;\n        ref = node.children;\n        for (i = 0, len = ref.length; i < len; i++) {\n          child = ref[i];\n          r += this.writeChildNode(child, options, level + 1);\n        }\n        options.state = WriterState.CloseTag;\n        r += ']';\n      }\n      options.state = WriterState.CloseTag;\n      r += options.spaceBeforeSlash + '>';\n      r += this.endline(node, options, level);\n      options.state = WriterState.None;\n      this.closeNode(node, options, level);\n      return r;\n    };\n    XMLWriterBase.prototype.element = function (node, options, level) {\n      var att, child, childNodeCount, firstChildNode, i, j, len, len1, name, prettySuppressed, r, ref, ref1, ref2;\n      level || (level = 0);\n      prettySuppressed = false;\n      r = '';\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r += this.indent(node, options, level) + '<' + node.name;\n      ref = node.attribs;\n      for (name in ref) {\n        if (!hasProp.call(ref, name)) continue;\n        att = ref[name];\n        r += this.attribute(att, options, level);\n      }\n      childNodeCount = node.children.length;\n      firstChildNode = childNodeCount === 0 ? null : node.children[0];\n      if (childNodeCount === 0 || node.children.every(function (e) {\n        return (e.type === NodeType.Text || e.type === NodeType.Raw) && e.value === '';\n      })) {\n        if (options.allowEmpty) {\n          r += '>';\n          options.state = WriterState.CloseTag;\n          r += '</' + node.name + '>' + this.endline(node, options, level);\n        } else {\n          options.state = WriterState.CloseTag;\n          r += options.spaceBeforeSlash + '/>' + this.endline(node, options, level);\n        }\n      } else if (options.pretty && childNodeCount === 1 && (firstChildNode.type === NodeType.Text || firstChildNode.type === NodeType.Raw) && firstChildNode.value != null) {\n        r += '>';\n        options.state = WriterState.InsideTag;\n        options.suppressPrettyCount++;\n        prettySuppressed = true;\n        r += this.writeChildNode(firstChildNode, options, level + 1);\n        options.suppressPrettyCount--;\n        prettySuppressed = false;\n        options.state = WriterState.CloseTag;\n        r += '</' + node.name + '>' + this.endline(node, options, level);\n      } else {\n        if (options.dontPrettyTextNodes) {\n          ref1 = node.children;\n          for (i = 0, len = ref1.length; i < len; i++) {\n            child = ref1[i];\n            if ((child.type === NodeType.Text || child.type === NodeType.Raw) && child.value != null) {\n              options.suppressPrettyCount++;\n              prettySuppressed = true;\n              break;\n            }\n          }\n        }\n        r += '>' + this.endline(node, options, level);\n        options.state = WriterState.InsideTag;\n        ref2 = node.children;\n        for (j = 0, len1 = ref2.length; j < len1; j++) {\n          child = ref2[j];\n          r += this.writeChildNode(child, options, level + 1);\n        }\n        options.state = WriterState.CloseTag;\n        r += this.indent(node, options, level) + '</' + node.name + '>';\n        if (prettySuppressed) {\n          options.suppressPrettyCount--;\n        }\n        r += this.endline(node, options, level);\n        options.state = WriterState.None;\n      }\n      this.closeNode(node, options, level);\n      return r;\n    };\n    XMLWriterBase.prototype.writeChildNode = function (node, options, level) {\n      switch (node.type) {\n        case NodeType.CData:\n          return this.cdata(node, options, level);\n        case NodeType.Comment:\n          return this.comment(node, options, level);\n        case NodeType.Element:\n          return this.element(node, options, level);\n        case NodeType.Raw:\n          return this.raw(node, options, level);\n        case NodeType.Text:\n          return this.text(node, options, level);\n        case NodeType.ProcessingInstruction:\n          return this.processingInstruction(node, options, level);\n        case NodeType.Dummy:\n          return '';\n        case NodeType.Declaration:\n          return this.declaration(node, options, level);\n        case NodeType.DocType:\n          return this.docType(node, options, level);\n        case NodeType.AttributeDeclaration:\n          return this.dtdAttList(node, options, level);\n        case NodeType.ElementDeclaration:\n          return this.dtdElement(node, options, level);\n        case NodeType.EntityDeclaration:\n          return this.dtdEntity(node, options, level);\n        case NodeType.NotationDeclaration:\n          return this.dtdNotation(node, options, level);\n        default:\n          throw new Error(\"Unknown XML node type: \" + node.constructor.name);\n      }\n    };\n    XMLWriterBase.prototype.processingInstruction = function (node, options, level) {\n      var r;\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r = this.indent(node, options, level) + '<?';\n      options.state = WriterState.InsideTag;\n      r += node.target;\n      if (node.value) {\n        r += ' ' + node.value;\n      }\n      options.state = WriterState.CloseTag;\n      r += options.spaceBeforeSlash + '?>';\n      r += this.endline(node, options, level);\n      options.state = WriterState.None;\n      this.closeNode(node, options, level);\n      return r;\n    };\n    XMLWriterBase.prototype.raw = function (node, options, level) {\n      var r;\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r = this.indent(node, options, level);\n      options.state = WriterState.InsideTag;\n      r += node.value;\n      options.state = WriterState.CloseTag;\n      r += this.endline(node, options, level);\n      options.state = WriterState.None;\n      this.closeNode(node, options, level);\n      return r;\n    };\n    XMLWriterBase.prototype.text = function (node, options, level) {\n      var r;\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r = this.indent(node, options, level);\n      options.state = WriterState.InsideTag;\n      r += node.value;\n      options.state = WriterState.CloseTag;\n      r += this.endline(node, options, level);\n      options.state = WriterState.None;\n      this.closeNode(node, options, level);\n      return r;\n    };\n    XMLWriterBase.prototype.dtdAttList = function (node, options, level) {\n      var r;\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r = this.indent(node, options, level) + '<!ATTLIST';\n      options.state = WriterState.InsideTag;\n      r += ' ' + node.elementName + ' ' + node.attributeName + ' ' + node.attributeType;\n      if (node.defaultValueType !== '#DEFAULT') {\n        r += ' ' + node.defaultValueType;\n      }\n      if (node.defaultValue) {\n        r += ' \"' + node.defaultValue + '\"';\n      }\n      options.state = WriterState.CloseTag;\n      r += options.spaceBeforeSlash + '>' + this.endline(node, options, level);\n      options.state = WriterState.None;\n      this.closeNode(node, options, level);\n      return r;\n    };\n    XMLWriterBase.prototype.dtdElement = function (node, options, level) {\n      var r;\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r = this.indent(node, options, level) + '<!ELEMENT';\n      options.state = WriterState.InsideTag;\n      r += ' ' + node.name + ' ' + node.value;\n      options.state = WriterState.CloseTag;\n      r += options.spaceBeforeSlash + '>' + this.endline(node, options, level);\n      options.state = WriterState.None;\n      this.closeNode(node, options, level);\n      return r;\n    };\n    XMLWriterBase.prototype.dtdEntity = function (node, options, level) {\n      var r;\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r = this.indent(node, options, level) + '<!ENTITY';\n      options.state = WriterState.InsideTag;\n      if (node.pe) {\n        r += ' %';\n      }\n      r += ' ' + node.name;\n      if (node.value) {\n        r += ' \"' + node.value + '\"';\n      } else {\n        if (node.pubID && node.sysID) {\n          r += ' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"';\n        } else if (node.sysID) {\n          r += ' SYSTEM \"' + node.sysID + '\"';\n        }\n        if (node.nData) {\n          r += ' NDATA ' + node.nData;\n        }\n      }\n      options.state = WriterState.CloseTag;\n      r += options.spaceBeforeSlash + '>' + this.endline(node, options, level);\n      options.state = WriterState.None;\n      this.closeNode(node, options, level);\n      return r;\n    };\n    XMLWriterBase.prototype.dtdNotation = function (node, options, level) {\n      var r;\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r = this.indent(node, options, level) + '<!NOTATION';\n      options.state = WriterState.InsideTag;\n      r += ' ' + node.name;\n      if (node.pubID && node.sysID) {\n        r += ' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"';\n      } else if (node.pubID) {\n        r += ' PUBLIC \"' + node.pubID + '\"';\n      } else if (node.sysID) {\n        r += ' SYSTEM \"' + node.sysID + '\"';\n      }\n      options.state = WriterState.CloseTag;\n      r += options.spaceBeforeSlash + '>' + this.endline(node, options, level);\n      options.state = WriterState.None;\n      this.closeNode(node, options, level);\n      return r;\n    };\n    XMLWriterBase.prototype.openNode = function (node, options, level) {};\n    XMLWriterBase.prototype.closeNode = function (node, options, level) {};\n    XMLWriterBase.prototype.openAttribute = function (att, options, level) {};\n    XMLWriterBase.prototype.closeAttribute = function (att, options, level) {};\n    return XMLWriterBase;\n  }();\n}).call(this);","map":{"version":3,"names":["NodeType","WriterState","XMLCData","XMLComment","XMLDTDAttList","XMLDTDElement","XMLDTDEntity","XMLDTDNotation","XMLDeclaration","XMLDocType","XMLDummy","XMLElement","XMLProcessingInstruction","XMLRaw","XMLText","XMLWriterBase","assign","hasProp","hasOwnProperty","require","module","exports","options","key","ref","value","writer","call","prototype","filterOptions","filteredOptions","ref1","ref2","ref3","ref4","ref5","ref6","pretty","allowEmpty","indent","newline","offset","dontPrettyTextNodes","dontprettytextnodes","spaceBeforeSlash","spacebeforeslash","suppressPrettyCount","user","state","None","node","level","indentLevel","Array","join","endline","attribute","att","r","openAttribute","name","closeAttribute","cdata","openNode","OpenTag","InsideTag","CloseTag","closeNode","comment","declaration","version","encoding","standalone","docType","child","i","len","root","pubID","sysID","children","length","writeChildNode","element","childNodeCount","firstChildNode","j","len1","prettySuppressed","attribs","every","e","type","Text","Raw","CData","Comment","Element","raw","text","ProcessingInstruction","processingInstruction","Dummy","Declaration","DocType","AttributeDeclaration","dtdAttList","ElementDeclaration","dtdElement","EntityDeclaration","dtdEntity","NotationDeclaration","dtdNotation","Error","constructor","target","elementName","attributeName","attributeType","defaultValueType","defaultValue","pe","nData"],"sources":["C:/Users/vkdld/OneDrive/바탕 화면/opensource2/node_modules/xmlbuilder/lib/XMLWriterBase.js"],"sourcesContent":["// Generated by CoffeeScript 1.12.7\n(function() {\n  var NodeType, WriterState, XMLCData, XMLComment, XMLDTDAttList, XMLDTDElement, XMLDTDEntity, XMLDTDNotation, XMLDeclaration, XMLDocType, XMLDummy, XMLElement, XMLProcessingInstruction, XMLRaw, XMLText, XMLWriterBase, assign,\n    hasProp = {}.hasOwnProperty;\n\n  assign = require('./Utility').assign;\n\n  NodeType = require('./NodeType');\n\n  XMLDeclaration = require('./XMLDeclaration');\n\n  XMLDocType = require('./XMLDocType');\n\n  XMLCData = require('./XMLCData');\n\n  XMLComment = require('./XMLComment');\n\n  XMLElement = require('./XMLElement');\n\n  XMLRaw = require('./XMLRaw');\n\n  XMLText = require('./XMLText');\n\n  XMLProcessingInstruction = require('./XMLProcessingInstruction');\n\n  XMLDummy = require('./XMLDummy');\n\n  XMLDTDAttList = require('./XMLDTDAttList');\n\n  XMLDTDElement = require('./XMLDTDElement');\n\n  XMLDTDEntity = require('./XMLDTDEntity');\n\n  XMLDTDNotation = require('./XMLDTDNotation');\n\n  WriterState = require('./WriterState');\n\n  module.exports = XMLWriterBase = (function() {\n    function XMLWriterBase(options) {\n      var key, ref, value;\n      options || (options = {});\n      this.options = options;\n      ref = options.writer || {};\n      for (key in ref) {\n        if (!hasProp.call(ref, key)) continue;\n        value = ref[key];\n        this[\"_\" + key] = this[key];\n        this[key] = value;\n      }\n    }\n\n    XMLWriterBase.prototype.filterOptions = function(options) {\n      var filteredOptions, ref, ref1, ref2, ref3, ref4, ref5, ref6;\n      options || (options = {});\n      options = assign({}, this.options, options);\n      filteredOptions = {\n        writer: this\n      };\n      filteredOptions.pretty = options.pretty || false;\n      filteredOptions.allowEmpty = options.allowEmpty || false;\n      filteredOptions.indent = (ref = options.indent) != null ? ref : '  ';\n      filteredOptions.newline = (ref1 = options.newline) != null ? ref1 : '\\n';\n      filteredOptions.offset = (ref2 = options.offset) != null ? ref2 : 0;\n      filteredOptions.dontPrettyTextNodes = (ref3 = (ref4 = options.dontPrettyTextNodes) != null ? ref4 : options.dontprettytextnodes) != null ? ref3 : 0;\n      filteredOptions.spaceBeforeSlash = (ref5 = (ref6 = options.spaceBeforeSlash) != null ? ref6 : options.spacebeforeslash) != null ? ref5 : '';\n      if (filteredOptions.spaceBeforeSlash === true) {\n        filteredOptions.spaceBeforeSlash = ' ';\n      }\n      filteredOptions.suppressPrettyCount = 0;\n      filteredOptions.user = {};\n      filteredOptions.state = WriterState.None;\n      return filteredOptions;\n    };\n\n    XMLWriterBase.prototype.indent = function(node, options, level) {\n      var indentLevel;\n      if (!options.pretty || options.suppressPrettyCount) {\n        return '';\n      } else if (options.pretty) {\n        indentLevel = (level || 0) + options.offset + 1;\n        if (indentLevel > 0) {\n          return new Array(indentLevel).join(options.indent);\n        }\n      }\n      return '';\n    };\n\n    XMLWriterBase.prototype.endline = function(node, options, level) {\n      if (!options.pretty || options.suppressPrettyCount) {\n        return '';\n      } else {\n        return options.newline;\n      }\n    };\n\n    XMLWriterBase.prototype.attribute = function(att, options, level) {\n      var r;\n      this.openAttribute(att, options, level);\n      r = ' ' + att.name + '=\"' + att.value + '\"';\n      this.closeAttribute(att, options, level);\n      return r;\n    };\n\n    XMLWriterBase.prototype.cdata = function(node, options, level) {\n      var r;\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r = this.indent(node, options, level) + '<![CDATA[';\n      options.state = WriterState.InsideTag;\n      r += node.value;\n      options.state = WriterState.CloseTag;\n      r += ']]>' + this.endline(node, options, level);\n      options.state = WriterState.None;\n      this.closeNode(node, options, level);\n      return r;\n    };\n\n    XMLWriterBase.prototype.comment = function(node, options, level) {\n      var r;\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r = this.indent(node, options, level) + '<!-- ';\n      options.state = WriterState.InsideTag;\n      r += node.value;\n      options.state = WriterState.CloseTag;\n      r += ' -->' + this.endline(node, options, level);\n      options.state = WriterState.None;\n      this.closeNode(node, options, level);\n      return r;\n    };\n\n    XMLWriterBase.prototype.declaration = function(node, options, level) {\n      var r;\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r = this.indent(node, options, level) + '<?xml';\n      options.state = WriterState.InsideTag;\n      r += ' version=\"' + node.version + '\"';\n      if (node.encoding != null) {\n        r += ' encoding=\"' + node.encoding + '\"';\n      }\n      if (node.standalone != null) {\n        r += ' standalone=\"' + node.standalone + '\"';\n      }\n      options.state = WriterState.CloseTag;\n      r += options.spaceBeforeSlash + '?>';\n      r += this.endline(node, options, level);\n      options.state = WriterState.None;\n      this.closeNode(node, options, level);\n      return r;\n    };\n\n    XMLWriterBase.prototype.docType = function(node, options, level) {\n      var child, i, len, r, ref;\n      level || (level = 0);\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r = this.indent(node, options, level);\n      r += '<!DOCTYPE ' + node.root().name;\n      if (node.pubID && node.sysID) {\n        r += ' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"';\n      } else if (node.sysID) {\n        r += ' SYSTEM \"' + node.sysID + '\"';\n      }\n      if (node.children.length > 0) {\n        r += ' [';\n        r += this.endline(node, options, level);\n        options.state = WriterState.InsideTag;\n        ref = node.children;\n        for (i = 0, len = ref.length; i < len; i++) {\n          child = ref[i];\n          r += this.writeChildNode(child, options, level + 1);\n        }\n        options.state = WriterState.CloseTag;\n        r += ']';\n      }\n      options.state = WriterState.CloseTag;\n      r += options.spaceBeforeSlash + '>';\n      r += this.endline(node, options, level);\n      options.state = WriterState.None;\n      this.closeNode(node, options, level);\n      return r;\n    };\n\n    XMLWriterBase.prototype.element = function(node, options, level) {\n      var att, child, childNodeCount, firstChildNode, i, j, len, len1, name, prettySuppressed, r, ref, ref1, ref2;\n      level || (level = 0);\n      prettySuppressed = false;\n      r = '';\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r += this.indent(node, options, level) + '<' + node.name;\n      ref = node.attribs;\n      for (name in ref) {\n        if (!hasProp.call(ref, name)) continue;\n        att = ref[name];\n        r += this.attribute(att, options, level);\n      }\n      childNodeCount = node.children.length;\n      firstChildNode = childNodeCount === 0 ? null : node.children[0];\n      if (childNodeCount === 0 || node.children.every(function(e) {\n        return (e.type === NodeType.Text || e.type === NodeType.Raw) && e.value === '';\n      })) {\n        if (options.allowEmpty) {\n          r += '>';\n          options.state = WriterState.CloseTag;\n          r += '</' + node.name + '>' + this.endline(node, options, level);\n        } else {\n          options.state = WriterState.CloseTag;\n          r += options.spaceBeforeSlash + '/>' + this.endline(node, options, level);\n        }\n      } else if (options.pretty && childNodeCount === 1 && (firstChildNode.type === NodeType.Text || firstChildNode.type === NodeType.Raw) && (firstChildNode.value != null)) {\n        r += '>';\n        options.state = WriterState.InsideTag;\n        options.suppressPrettyCount++;\n        prettySuppressed = true;\n        r += this.writeChildNode(firstChildNode, options, level + 1);\n        options.suppressPrettyCount--;\n        prettySuppressed = false;\n        options.state = WriterState.CloseTag;\n        r += '</' + node.name + '>' + this.endline(node, options, level);\n      } else {\n        if (options.dontPrettyTextNodes) {\n          ref1 = node.children;\n          for (i = 0, len = ref1.length; i < len; i++) {\n            child = ref1[i];\n            if ((child.type === NodeType.Text || child.type === NodeType.Raw) && (child.value != null)) {\n              options.suppressPrettyCount++;\n              prettySuppressed = true;\n              break;\n            }\n          }\n        }\n        r += '>' + this.endline(node, options, level);\n        options.state = WriterState.InsideTag;\n        ref2 = node.children;\n        for (j = 0, len1 = ref2.length; j < len1; j++) {\n          child = ref2[j];\n          r += this.writeChildNode(child, options, level + 1);\n        }\n        options.state = WriterState.CloseTag;\n        r += this.indent(node, options, level) + '</' + node.name + '>';\n        if (prettySuppressed) {\n          options.suppressPrettyCount--;\n        }\n        r += this.endline(node, options, level);\n        options.state = WriterState.None;\n      }\n      this.closeNode(node, options, level);\n      return r;\n    };\n\n    XMLWriterBase.prototype.writeChildNode = function(node, options, level) {\n      switch (node.type) {\n        case NodeType.CData:\n          return this.cdata(node, options, level);\n        case NodeType.Comment:\n          return this.comment(node, options, level);\n        case NodeType.Element:\n          return this.element(node, options, level);\n        case NodeType.Raw:\n          return this.raw(node, options, level);\n        case NodeType.Text:\n          return this.text(node, options, level);\n        case NodeType.ProcessingInstruction:\n          return this.processingInstruction(node, options, level);\n        case NodeType.Dummy:\n          return '';\n        case NodeType.Declaration:\n          return this.declaration(node, options, level);\n        case NodeType.DocType:\n          return this.docType(node, options, level);\n        case NodeType.AttributeDeclaration:\n          return this.dtdAttList(node, options, level);\n        case NodeType.ElementDeclaration:\n          return this.dtdElement(node, options, level);\n        case NodeType.EntityDeclaration:\n          return this.dtdEntity(node, options, level);\n        case NodeType.NotationDeclaration:\n          return this.dtdNotation(node, options, level);\n        default:\n          throw new Error(\"Unknown XML node type: \" + node.constructor.name);\n      }\n    };\n\n    XMLWriterBase.prototype.processingInstruction = function(node, options, level) {\n      var r;\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r = this.indent(node, options, level) + '<?';\n      options.state = WriterState.InsideTag;\n      r += node.target;\n      if (node.value) {\n        r += ' ' + node.value;\n      }\n      options.state = WriterState.CloseTag;\n      r += options.spaceBeforeSlash + '?>';\n      r += this.endline(node, options, level);\n      options.state = WriterState.None;\n      this.closeNode(node, options, level);\n      return r;\n    };\n\n    XMLWriterBase.prototype.raw = function(node, options, level) {\n      var r;\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r = this.indent(node, options, level);\n      options.state = WriterState.InsideTag;\n      r += node.value;\n      options.state = WriterState.CloseTag;\n      r += this.endline(node, options, level);\n      options.state = WriterState.None;\n      this.closeNode(node, options, level);\n      return r;\n    };\n\n    XMLWriterBase.prototype.text = function(node, options, level) {\n      var r;\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r = this.indent(node, options, level);\n      options.state = WriterState.InsideTag;\n      r += node.value;\n      options.state = WriterState.CloseTag;\n      r += this.endline(node, options, level);\n      options.state = WriterState.None;\n      this.closeNode(node, options, level);\n      return r;\n    };\n\n    XMLWriterBase.prototype.dtdAttList = function(node, options, level) {\n      var r;\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r = this.indent(node, options, level) + '<!ATTLIST';\n      options.state = WriterState.InsideTag;\n      r += ' ' + node.elementName + ' ' + node.attributeName + ' ' + node.attributeType;\n      if (node.defaultValueType !== '#DEFAULT') {\n        r += ' ' + node.defaultValueType;\n      }\n      if (node.defaultValue) {\n        r += ' \"' + node.defaultValue + '\"';\n      }\n      options.state = WriterState.CloseTag;\n      r += options.spaceBeforeSlash + '>' + this.endline(node, options, level);\n      options.state = WriterState.None;\n      this.closeNode(node, options, level);\n      return r;\n    };\n\n    XMLWriterBase.prototype.dtdElement = function(node, options, level) {\n      var r;\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r = this.indent(node, options, level) + '<!ELEMENT';\n      options.state = WriterState.InsideTag;\n      r += ' ' + node.name + ' ' + node.value;\n      options.state = WriterState.CloseTag;\n      r += options.spaceBeforeSlash + '>' + this.endline(node, options, level);\n      options.state = WriterState.None;\n      this.closeNode(node, options, level);\n      return r;\n    };\n\n    XMLWriterBase.prototype.dtdEntity = function(node, options, level) {\n      var r;\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r = this.indent(node, options, level) + '<!ENTITY';\n      options.state = WriterState.InsideTag;\n      if (node.pe) {\n        r += ' %';\n      }\n      r += ' ' + node.name;\n      if (node.value) {\n        r += ' \"' + node.value + '\"';\n      } else {\n        if (node.pubID && node.sysID) {\n          r += ' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"';\n        } else if (node.sysID) {\n          r += ' SYSTEM \"' + node.sysID + '\"';\n        }\n        if (node.nData) {\n          r += ' NDATA ' + node.nData;\n        }\n      }\n      options.state = WriterState.CloseTag;\n      r += options.spaceBeforeSlash + '>' + this.endline(node, options, level);\n      options.state = WriterState.None;\n      this.closeNode(node, options, level);\n      return r;\n    };\n\n    XMLWriterBase.prototype.dtdNotation = function(node, options, level) {\n      var r;\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r = this.indent(node, options, level) + '<!NOTATION';\n      options.state = WriterState.InsideTag;\n      r += ' ' + node.name;\n      if (node.pubID && node.sysID) {\n        r += ' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"';\n      } else if (node.pubID) {\n        r += ' PUBLIC \"' + node.pubID + '\"';\n      } else if (node.sysID) {\n        r += ' SYSTEM \"' + node.sysID + '\"';\n      }\n      options.state = WriterState.CloseTag;\n      r += options.spaceBeforeSlash + '>' + this.endline(node, options, level);\n      options.state = WriterState.None;\n      this.closeNode(node, options, level);\n      return r;\n    };\n\n    XMLWriterBase.prototype.openNode = function(node, options, level) {};\n\n    XMLWriterBase.prototype.closeNode = function(node, options, level) {};\n\n    XMLWriterBase.prototype.openAttribute = function(att, options, level) {};\n\n    XMLWriterBase.prototype.closeAttribute = function(att, options, level) {};\n\n    return XMLWriterBase;\n\n  })();\n\n}).call(this);\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}