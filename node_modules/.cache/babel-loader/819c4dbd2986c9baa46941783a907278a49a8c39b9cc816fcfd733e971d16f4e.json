{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vkdld\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\opensource2\\\\newsproject\\\\src\\\\components\\\\pages\\\\LoginPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport LogInput from \"../ui/LogInput\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PageWrapper = styled.div`\n  width: 100%;\n  max-width: 720px;\n  margin: 0 auto;\n  padding: 20px;\n`;\n_c = PageWrapper;\nconst LoginForm = styled.form`\n  display: flex;\n  flex-direction: column;\n`;\n_c2 = LoginForm;\nconst SubmitButton = styled.button`\n  background-color: #666666;\n  color: white;\n  padding: 10px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n`;\n_c3 = SubmitButton;\nconst LoginPage = () => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const navigate = useNavigate();\n  const sendDataToServer = async () => {\n    try {\n      const data = {\n        id: username,\n        passwd: password\n      };\n      const response = await fetch('http://localhost:8080/users/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      });\n      if (response.ok) {\n        // HTTP 상태 코드가 200번대이면 성공으로 간주\n        const responseData = await response.json();\n        console.log('서버 응답:', responseData);\n      } else {\n        // 성공하지 않은 경우\n        console.error('서버 응답 오류:', response.status, response.statusText);\n      }\n    } catch (error) {\n      console.error('데이터 전송 오류:', error);\n    }\n    navigate('/');\n  };\n  const handleLogin = e => {\n    e.preventDefault();\n    console.log('로그인:', username, password);\n  };\n  return /*#__PURE__*/_jsxDEV(PageWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      align: \"center\",\n      children: \"\\uB85C\\uADF8\\uC778\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LoginForm, {\n      onSubmit: handleLogin,\n      children: [/*#__PURE__*/_jsxDEV(LogInput, {\n        label: \"\\uC544\\uC774\\uB514\",\n        type: \"text\",\n        placeholder: \"\\uC544\\uC774\\uB514\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\",\n        value: username,\n        onChange: setUsername\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LogInput, {\n        label: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n        type: \"password\",\n        placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\",\n        value: password,\n        onChange: setPassword\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SubmitButton, {\n        onClick: sendDataToServer,\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginPage, \"IIPwWddbiEHHD7aoL5eQeOR7fTk=\", false, function () {\n  return [useNavigate];\n});\n_c4 = LoginPage;\nexport default LoginPage;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"PageWrapper\");\n$RefreshReg$(_c2, \"LoginForm\");\n$RefreshReg$(_c3, \"SubmitButton\");\n$RefreshReg$(_c4, \"LoginPage\");","map":{"version":3,"names":["React","useState","useNavigate","styled","LogInput","jsxDEV","_jsxDEV","PageWrapper","div","_c","LoginForm","form","_c2","SubmitButton","button","_c3","LoginPage","_s","username","setUsername","password","setPassword","navigate","sendDataToServer","data","id","passwd","response","fetch","method","headers","body","JSON","stringify","ok","responseData","json","console","log","error","status","statusText","handleLogin","e","preventDefault","children","align","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","label","type","placeholder","value","onChange","onClick","_c4","$RefreshReg$"],"sources":["C:/Users/vkdld/OneDrive/바탕 화면/opensource2/newsproject/src/components/pages/LoginPage.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport LogInput from \"../ui/LogInput\";\r\n\r\nconst PageWrapper = styled.div`\r\n  width: 100%;\r\n  max-width: 720px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n`;\r\n\r\nconst LoginForm = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst SubmitButton = styled.button`\r\n  background-color: #666666;\r\n  color: white;\r\n  padding: 10px;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst LoginPage = () => {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const sendDataToServer = async () => {\r\n    try {\r\n      const data = { id: username, passwd: password };\r\n      const response = await fetch('http://localhost:8080/users/login', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(data),\r\n      });\r\n\r\n      if (response.ok) {\r\n        // HTTP 상태 코드가 200번대이면 성공으로 간주\r\n        const responseData = await response.json();\r\n        console.log('서버 응답:', responseData);\r\n      } else {\r\n        // 성공하지 않은 경우\r\n        console.error('서버 응답 오류:', response.status, response.statusText);\r\n      }\r\n    } catch (error) {\r\n      console.error('데이터 전송 오류:', error);\r\n    }\r\n\r\n    navigate('/');\r\n  };\r\n\r\n  const handleLogin = (e) => {\r\n    e.preventDefault();\r\n    console.log('로그인:', username, password);\r\n  };\r\n\r\n  return (\r\n    <PageWrapper>\r\n      <h2 align=\"center\">로그인</h2>\r\n      <LoginForm onSubmit={handleLogin}>\r\n        <LogInput\r\n          label=\"아이디\"\r\n          type=\"text\"\r\n          placeholder=\"아이디를 입력해주세요\"\r\n          value={username}\r\n          onChange={setUsername}\r\n        />\r\n        <LogInput\r\n          label=\"비밀번호\"\r\n          type=\"password\"\r\n          placeholder=\"비밀번호를 입력해주세요\"\r\n          value={password}\r\n          onChange={setPassword}\r\n        />\r\n        <SubmitButton onClick={sendDataToServer} type=\"submit\">Login</SubmitButton>\r\n      </LoginForm>\r\n    </PageWrapper>\r\n  );\r\n};\r\n\r\nexport default LoginPage;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAOC,QAAQ,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,WAAW,GAAGJ,MAAM,CAACK,GAAI;AAC/B;AACA;AACA;AACA;AACA,CAAC;AAACC,EAAA,GALIF,WAAW;AAOjB,MAAMG,SAAS,GAAGP,MAAM,CAACQ,IAAK;AAC9B;AACA;AACA,CAAC;AAACC,GAAA,GAHIF,SAAS;AAKf,MAAMG,YAAY,GAAGV,MAAM,CAACW,MAAO;AACnC;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GAPIF,YAAY;AASlB,MAAMG,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACmB,QAAQ,EAAEC,WAAW,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMqB,QAAQ,GAAGpB,WAAW,CAAC,CAAC;EAE9B,MAAMqB,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,IAAI;MACF,MAAMC,IAAI,GAAG;QAAEC,EAAE,EAAEP,QAAQ;QAAEQ,MAAM,EAAEN;MAAS,CAAC;MAC/C,MAAMO,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmC,EAAE;QAChEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACT,IAAI;MAC3B,CAAC,CAAC;MAEF,IAAIG,QAAQ,CAACO,EAAE,EAAE;QACf;QACA,MAAMC,YAAY,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;QAC1CC,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEH,YAAY,CAAC;MACrC,CAAC,MAAM;QACL;QACAE,OAAO,CAACE,KAAK,CAAC,WAAW,EAAEZ,QAAQ,CAACa,MAAM,EAAEb,QAAQ,CAACc,UAAU,CAAC;MAClE;IACF,CAAC,CAAC,OAAOF,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,YAAY,EAAEA,KAAK,CAAC;IACpC;IAEAjB,QAAQ,CAAC,GAAG,CAAC;EACf,CAAC;EAED,MAAMoB,WAAW,GAAIC,CAAC,IAAK;IACzBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBP,OAAO,CAACC,GAAG,CAAC,MAAM,EAAEpB,QAAQ,EAAEE,QAAQ,CAAC;EACzC,CAAC;EAED,oBACEd,OAAA,CAACC,WAAW;IAAAsC,QAAA,gBACVvC,OAAA;MAAIwC,KAAK,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAG;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3B5C,OAAA,CAACI,SAAS;MAACyC,QAAQ,EAAET,WAAY;MAAAG,QAAA,gBAC/BvC,OAAA,CAACF,QAAQ;QACPgD,KAAK,EAAC,oBAAK;QACXC,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,+DAAa;QACzBC,KAAK,EAAErC,QAAS;QAChBsC,QAAQ,EAAErC;MAAY;QAAA4B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvB,CAAC,eACF5C,OAAA,CAACF,QAAQ;QACPgD,KAAK,EAAC,0BAAM;QACZC,IAAI,EAAC,UAAU;QACfC,WAAW,EAAC,qEAAc;QAC1BC,KAAK,EAAEnC,QAAS;QAChBoC,QAAQ,EAAEnC;MAAY;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvB,CAAC,eACF5C,OAAA,CAACO,YAAY;QAAC4C,OAAO,EAAElC,gBAAiB;QAAC8B,IAAI,EAAC,QAAQ;QAAAR,QAAA,EAAC;MAAK;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAc,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAElB,CAAC;AAACjC,EAAA,CA1DID,SAAS;EAAA,QAGId,WAAW;AAAA;AAAAwD,GAAA,GAHxB1C,SAAS;AA4Df,eAAeA,SAAS;AAAC,IAAAP,EAAA,EAAAG,GAAA,EAAAG,GAAA,EAAA2C,GAAA;AAAAC,YAAA,CAAAlD,EAAA;AAAAkD,YAAA,CAAA/C,GAAA;AAAA+C,YAAA,CAAA5C,GAAA;AAAA4C,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}